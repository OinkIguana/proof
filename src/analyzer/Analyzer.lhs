\documentclass{article}
\usepackage{../../literate}

\begin{document}

\section{Analyzer}

The Analyzer is what analyzes the syntax trees generated by the Parser and
ensures that everything is valid.

\begin{code}
module Analyzer where
  import Data.Map (Map)
  import qualified Data.Map.Strict as Map
  import Parser
\end{code}

The analyze function is the heart of this whole system, kicking off the whole
process of inferring and checking types. If all works out correctly, it returns
a True. If not, an AnalysisError.

\begin{code}
  analyze :: AST -> Either AnalysisError Bool
  analyze ast = Right True

  newtype AnalysisError = AnalysisError String
\end{code}

\end{document}
